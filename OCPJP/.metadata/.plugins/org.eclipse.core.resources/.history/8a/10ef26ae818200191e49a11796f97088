package sierra.cathy.lambda;

import java.util.Arrays;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.Consumer;

public class TestingLambda {
	String a="Hi";
	int n=7; 
	
	//For Lambda expression outside method, variables used inside Lambda is not needed to be final or effectively final essentially
	Consumer<String> c= s -> {String a="Hello"; int n=6; System.out.println(s+" "+" " +a+" "+n);}; 
	
	
	
	
	

	public static void main(String[] args) {
		
		TestingLambda TL=new TestingLambda();
		TL.c.accept("Bye");
		String userName="hi";
		//BiConsumer<String, String> bc=(key,value) -> {userName="hg"; System.out.println(userName);};
		BiConsumer<String, String> bc=(key,value) -> {System.out.println(userName);}; // final or effectively final rule is applicable for inner method lambda expression.
//		userName="";

		
		List<String> aList= Arrays.asList("Hi","hello");
		

	}

}
